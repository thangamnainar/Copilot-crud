{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nclass ServiceService {\n  constructor(http) {\n    this.http = http;\n  }\n  getdata() {\n    let url = \"http://localhost:3000/users\";\n    return this.http.get(url);\n  }\n  getdataById(id) {\n    let url = \"http://localhost:3000/users/\" + id;\n    return this.http.get(url);\n  }\n  postdata(data) {\n    let url = \"http://localhost:3000/addUsers\";\n    return this.http.post(url, data);\n  }\n  delete(id) {\n    let url = \"http://localhost:3000/deleteUser/\";\n    let Id = {\n      id: id\n    };\n    console.log('sssssssss', Id);\n    return this.http.put(url, Id);\n  }\n}\nServiceService.ɵfac = function ServiceService_Factory(t) {\n  return new (t || ServiceService)(i0.ɵɵinject(i1.HttpClient));\n};\nServiceService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ServiceService,\n  factory: ServiceService.ɵfac,\n  providedIn: 'root'\n});\nexport { ServiceService };","map":{"version":3,"names":["ServiceService","constructor","http","getdata","url","get","getdataById","id","postdata","data","post","delete","Id","console","log","put","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["/home/trainingbatchmarch2023/Documents/copilotCrud/client/src/app/service.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ServiceService {\n\n  constructor(private http:HttpClient) { };\n  getdata(){\n    let url=\"http://localhost:3000/users\";\n    return this.http.get(url);\n  }\n  getdataById(id:any){\n    let url=\"http://localhost:3000/users/\"+id;\n    return this.http.get(url);\n  }\n  postdata(data:any){\n    let url=\"http://localhost:3000/addUsers\";\n    return this.http.post(url,data);\n  }\n  delete(id:any){\n    let url=\"http://localhost:3000/deleteUser/\";\n    let Id = {id:id};\n    console.log('sssssssss',Id);\n    \n    return this.http.put  (url,Id);\n  }\n}\n"],"mappings":";;AAGA,MAGaA,cAAc;EAEzBC,YAAoBC,IAAe;IAAf,KAAAA,IAAI,GAAJA,IAAI;EAAe;EACvCC,OAAOA,CAAA;IACL,IAAIC,GAAG,GAAC,6BAA6B;IACrC,OAAO,IAAI,CAACF,IAAI,CAACG,GAAG,CAACD,GAAG,CAAC;EAC3B;EACAE,WAAWA,CAACC,EAAM;IAChB,IAAIH,GAAG,GAAC,8BAA8B,GAACG,EAAE;IACzC,OAAO,IAAI,CAACL,IAAI,CAACG,GAAG,CAACD,GAAG,CAAC;EAC3B;EACAI,QAAQA,CAACC,IAAQ;IACf,IAAIL,GAAG,GAAC,gCAAgC;IACxC,OAAO,IAAI,CAACF,IAAI,CAACQ,IAAI,CAACN,GAAG,EAACK,IAAI,CAAC;EACjC;EACAE,MAAMA,CAACJ,EAAM;IACX,IAAIH,GAAG,GAAC,mCAAmC;IAC3C,IAAIQ,EAAE,GAAG;MAACL,EAAE,EAACA;IAAE,CAAC;IAChBM,OAAO,CAACC,GAAG,CAAC,WAAW,EAACF,EAAE,CAAC;IAE3B,OAAO,IAAI,CAACV,IAAI,CAACa,GAAG,CAAGX,GAAG,EAACQ,EAAE,CAAC;EAChC;;AArBWZ,cAAc,C;mBAAdA,cAAc,EAAAgB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;AAAdnB,cAAc,C;SAAdA,cAAc;EAAAoB,OAAA,EAAdpB,cAAc,CAAAqB,IAAA;EAAAC,UAAA,EAFb;AAAM;SAEPtB,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}